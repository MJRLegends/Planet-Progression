def minecraft_version="1.11.2"
def jei_version="4.5.0.294"
def nei_version="2.3.0.227"
def ccl_version="3.0.0.328"

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
	maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.11.2-0.2.7"
group= "com.mjr.planetprogression" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PlanetProgression"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.11.2-13.20.1.2513"
    runDir = "run"
    mappings = "snapshot_20161220"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:deobf"
    compile "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:deobf"
	compile files (
		"Galacticraft-API-1.11.2-4.0.1.177.jar",
		"GalacticraftCore-Dev-1.11.2-4.0.1.177.jar",
		"Galacticraft-Planets-Dev-1.11.2-4.0.1.177.jar",
		"MicdoodleCore-Dev-1.11.2-4.0.1.177.jar",
		"MJRLegendsLib-1.11.2-1.0.8-dev.jar"
	)
	runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
    runtime "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:deobf"
    runtime "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:deobf"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar
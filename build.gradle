def minecraft_version="1.10.2"
def jei_version="3.14.7.416"
def CCLIB_version="2.5.7.248"
def NEI_version="2.1.3.220"
def ccc_version="2.4.1.102"
def version_mjrlegendslib="1.10.2-1.1.3"

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
	maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
	maven {
	    name 'MJRLegends'
	    url = "https://maven.mjrlegends.com/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

version = "1.10.2-0.3.4"
group= "com.mjr.planetprogression" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PlanetProgression"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.10.2-12.18.3.2511"
    runDir = "run"
    mappings = "snapshot_20161111"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
	deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"
	compile "codechicken:CodeChickenLib:${minecraft_version}-${CCLIB_version}:deobf"
    compile "codechicken:CodeChickenCore:${minecraft_version}-${ccc_version}:deobf"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${NEI_version}:deobf"
	deobfCompile "com.mjr.mjrlegendslib:MJRLegendsLib:${version_mjrlegendslib}:dev"
	compile files (
		"Galacticraft-API-1.10.2-4.0.1.185.jar",
		"GalacticraftCore-Dev-1.10.2-4.0.1.185.jar",
		"Galacticraft-Planets-Dev-1.10.2-4.0.1.185.jar",
		"MicdoodleCore-Dev-1.10.2-4.0.1.185.jar"
	)
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

curseforge {
	apiKey = project.findProperty("curseforge_key")
	project {
		id = "287275"
		releaseType = "release"
		addGameVersion "${minecraft_version}"
		mainArtifact(jar) {
			relations {
				requiredLibrary 'mjrlegendslib'
			}
		}
	}
}

build.dependsOn signJar
tasks.build.dependsOn signJar
tasks.curseforge.dependsOn build
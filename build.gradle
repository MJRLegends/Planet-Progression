def minecraft_version="1.10.2"
def jei_version="3.14.7.416"
def CCLIB_version="2.5.7.248"
def NEI_version="2.1.3.220"
def ccc_version="2.4.1.102"

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
	maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "1.0"
group= "com.mjr.planetprogression" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PlanetProgression"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.10.2-12.18.3.2511"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161111"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
	deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"
	compile "codechicken:CodeChickenLib:${minecraft_version}-${CCLIB_version}:deobf"
    compile "codechicken:CodeChickenCore:${minecraft_version}-${ccc_version}:deobf"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${NEI_version}:deobf"

	compile files (
		"Galacticraft-API-1.10.2-4.0.0.119.jar",
		"GalacticraftCore-Dev-1.10.2-4.0.0.119.jar",
		"Galacticraft-Planets-Dev-1.10.2-4.0.0.119.jar",
		"MicdoodleCore-Dev-1.10.2-4.0.0.119.jar"
	)
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

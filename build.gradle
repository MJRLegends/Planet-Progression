def minecraft_version="1.11.2"
def jei_version="4.5.0.294"
def nei_version="2.3.0.227"
def ccl_version="3.0.0.328"
def version_mjrlegendslib="1.11.2-1.1.3"

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.1.0"
    }
}

repositories {
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
	maven {
        name 'CB Maven FS'
        url "http://chickenbones.net/maven/"
    }
	maven {
	    name 'MJRLegends'
	    url = "https://maven.mjrlegends.com/"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'

version = "1.11.2-0.4.3"
group= "com.mjr.planetprogression" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "PlanetProgression"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.11.2-13.20.1.2513"
    runDir = "run"
    mappings = "snapshot_20161220"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile "mezz.jei:jei_${minecraft_version}:${jei_version}:api"
    compile "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:deobf"
    compile "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:deobf"
	deobfCompile "com.mjr.mjrlegendslib:MJRLegendsLib:${version_mjrlegendslib}:dev"
	compile files (
		"Galacticraft-API-1.11.2-4.0.1.185.jar",
		"GalacticraftCore-Dev-1.11.2-4.0.1.185.jar",
		"Galacticraft-Planets-Dev-1.11.2-4.0.1.185.jar",
		"MicdoodleCore-Dev-1.11.2-4.0.1.185.jar"
	)
	runtime "mezz.jei:jei_${minecraft_version}:${jei_version}"
    runtime "codechicken:NotEnoughItems:${minecraft_version}-${nei_version}:deobf"
    runtime "codechicken:CodeChickenLib:${minecraft_version}-${ccl_version}:deobf"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
		expand 'version':project.version, 'mcversion':project.minecraft.version
    }
	from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task apiJar(type: Jar) {
    from(sourceSets.main.output) {
        include "com/mjr/planetprogression/api/**"
		include "com/mjr/planetprogression/client/handlers/capabilities/**"
		include "com/mjr/planetprogression/handlers/capabilities/**"
    }
	from(sourceSets.main.java) {
        include "com/mjr/planetprogression/api/**"
		include "com/mjr/planetprogression/client/handlers/capabilities/**"
		include "com/mjr/planetprogression/handlers/capabilities/**"
    }
    classifier = 'api'
}

task signJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf {
        project.hasProperty('keyStore')
    }
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

artifacts {
    archives apiJar
}

task ("uploadMaven"){
	apply plugin: 'maven'
	uploadArchives {
		repositories {
			mavenDeployer {
				if (project.hasProperty("local_maven")) {
					repository(url: "file://${local_maven}")
				}
			}
		}
	}
}

curseforge {
    if (project.hasProperty('curseforge_key')){
		apiKey = project.findProperty("curseforge_key")
		project {
			id = "287275"
			releaseType = "release"
			addGameVersion "${minecraft_version}"
			mainArtifact(jar) {
				relations {
					requiredLibrary 'mjrlegendslib'
				}
			}
			addArtifact(apiJar)
		}
	}
}

build.dependsOn signJar
tasks.build.dependsOn signJar
tasks.curseforge.dependsOn build